name: Build and Deploy to EKS on Fargate

on:
  push:
    branches: [ main ]
    
jobs:
  build-and-deploy:
     name: Build and Push to ECR
     runs-on: ubuntu-latest
     
     env:
       AWS_REGION: us-east-1
       EKS_CLUSTER_NAME: demo
     
     steps:
     - name: Checkout
       uses: actions/checkout@v3
       
     - name: Set up JDK 19
       uses: actions/setup-java@v1
       with:
         java-version: 19
         
     - name: Set up Apache Maven
       uses: actions/setup-java@v1
       with:
         java-version: 19
         maven-version: 3.x
         
     - name: Build and Package the Application
       run: mvn clean package -DskipTests
       
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
         
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
       
     - name: Automatic Tagging of Releases
       id: increment-git-tag
       run: |
         chmod +x ./build/git_update.sh
         bash bash ./build/git_update.sh -v patch
         
     - name: Build, Tag, and Push the Image to Amazon ECR
       id: build-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: spring-boot
         IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
       run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
         
     - name: Setup kubeconfig
       id: setup-kubeconfig
       run: |
         aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
         
     - name: Deploy k8s yaml
       id: deploy-k8s-yaml
       env:
         K8S_YAML_DIR: ./K8S
         IMAGE_NAME: ${{ steps.build-image.outputs.image }}
       run: |
         # Setup kustomize
         cd $K8S_YAML_DIR
         curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
         chmod u+x ./kustomize
         ./kustomize edit set image example-eks=$IMAGE_NAME
         ./kustomize build . | kubectl apply -f -
         # Verify deployment
         kubectl rollout status deployment/aws-example-octodex
         # List Public IP of cluster
         kubectl get services -o wide
         kubectl get ingress
