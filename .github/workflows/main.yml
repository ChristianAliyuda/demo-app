name: Build and Deploy to EKS on Fargate

on:
  push:
    branches: [ main ]
    
env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 490294748073.dkr.ecr.us-east-1.amazonaws.com
  ECR_IMAGE: demo-app
  K8S_NAMESPACE: staging
  
jobs:
  build-and-deploy:
     name: Build and Push to ECR
     runs-on: ubuntu-latest
     
     steps:
     - name: Checkout
       uses: actions/checkout@v2
       
     - name: Set up JDK 19
       uses: actions/setup-java@v1
       with:
         java-version: 19
         
     - name: Set up Apache Maven
       uses: actions/setup-java@v1
       with:
         java-version: 19
         maven-version: 3.x
         
     - name: Build and Package the Application
       run: mvn clean package -DskipTests
       
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
         
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
       
     - name: Automatic Tagging of Releases
       id: increment-git-tag
       run: |
         bash bash ./build/git_update.sh -v patch
         
     - name: Build, Tag, and Push the Image to Amazon ECR
       id: build-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: spring-boot
         IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
       run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         
     - name: Apply Kubernetes manifests
       env: 
         K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
         K8S_IMAGE: ${{ env.ECR_REGISTRY }}/${{ env.ECR_IMAGE }}:${{ env.TAG_NAME }}
       uses: Azure/k8s-apply@v1
